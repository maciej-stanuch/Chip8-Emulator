package vm.opcode;

import java.util.Objects;
import java.util.StringJoiner;
import java.util.function.Consumer;

public class OpcodeEntry {
    private final char opcode;
    private final char mask;
    private final Consumer<Character> handler;

    // region Constructor, getters, equals, hashCode, toString -- generated by BoB the Builder of Beans
    // The code below has been generated by BoB the Builder of Beans based on the class' fields.
    // Everything after this comment will be regenerated if you invoke BoB again.
    // If you don't know who BoB is, you can find him here: https://bitbucket.org/atlassianlabs/bob-the-builder-of-beans

    public OpcodeEntry(char opcode, char mask, Consumer<Character> handler) {
        this.opcode = opcode;
        this.mask = mask;
        this.handler = Objects.requireNonNull(handler);
    }

    // region Getters -- generated by BoB the Builder of Beans
    public char getOpcode() {
        return opcode;
    }

    public char getMask() {
        return mask;
    }

    public Consumer<Character> getHandler() {
        return handler;
    }// endregion Getters

    // region hashCode() and equals() -- generated by BoB the Builder of Beans
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }

        OpcodeEntry that = (OpcodeEntry) o;

        return Objects.equals(this.getOpcode(), that.getOpcode()) && Objects.equals(this.getMask(), that.getMask()) && Objects.equals(this.getHandler(), that.getHandler());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getOpcode(), getMask(), getHandler());
    }// endregion hashCode() and equals()

    // region toString() -- generated by BoB the Builder of Beans
    @Override
    public String toString() {
        return new StringJoiner(", ", this.getClass().getSimpleName() + "{", "}")
                .add("opcode=" + getOpcode())
                .add("mask=" + getMask())
                .add("handler=" + getHandler())
                .toString();
    }// endregion toString()
    // endregion Constructor, getters, equals, hashCode, toString
}
